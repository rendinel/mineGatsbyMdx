{"version":3,"file":"component---src-templates-blog-category-jsx-a654f3a2f916b78bdae0.js","mappings":"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","sources":["webpack://gatsbydecapblog/./src/components/Home/Card.jsx","webpack://gatsbydecapblog/./node_modules/@chakra-ui/layout/dist/chunk-ZFQCCYWD.mjs","webpack://gatsbydecapblog/./node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","webpack://gatsbydecapblog/./node_modules/@chakra-ui/layout/dist/chunk-ZHMYA64R.mjs","webpack://gatsbydecapblog/./node_modules/@chakra-ui/layout/dist/chunk-5VJV6UNA.mjs","webpack://gatsbydecapblog/./node_modules/@chakra-ui/react-children-utils/dist/index.mjs","webpack://gatsbydecapblog/./src/components/Home/Pagination.jsx","webpack://gatsbydecapblog/./src/components/Home/CardList.jsx","webpack://gatsbydecapblog/./src/components/Home/Category.jsx","webpack://gatsbydecapblog/./src/hooks/use-site-metadata.jsx","webpack://gatsbydecapblog/./src/components/Layout/Seo.jsx","webpack://gatsbydecapblog/./src/templates/BlogCategory.jsx","webpack://gatsbydecapblog/./node_modules/@chakra-ui/layout/dist/chunk-7OLJDQMT.mjs"],"sourcesContent":["import React from 'react'\nimport { Box, Heading, Text, Link } from '@chakra-ui/react'\nimport { Link as GatsbyLink } from 'gatsby'\nimport Category from './Category'\n\nexport default function Card({ post }) {\n  const { date, title, preview, slug, category } = post.frontmatter\n  return (\n    <Box>\n      <Text color='#757575' fontSize='0.875rem'>\n        {date}\n      </Text>\n      <Category category={category} />\n      <Heading color='#292929' as='h3' fontWeight='400' fontSize='1.5rem'>\n        {title}\n      </Heading>\n      <Text\n        lineHeight='1.54'\n        my='1rem'\n        fontSize='1.125rem'\n        as='p'\n        color='rgba(0,0,0,.8)'\n      >\n        {preview}\n      </Text>\n      <Link as={GatsbyLink} to={`/blog/${slug}`}>\n        <Text\n          fontSize='1rem'\n          textDecoration='underline'\n          _hover={{ color: '#0074d9' }}\n        >\n          Read Article\n        </Text>\n      </Link>\n      <Box h='1px' bg='#e6e6e6' my='3rem' />\n    </Box>\n  )\n}\n","'use client'\n\n// src/stack/stack-item.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StackItem = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__item\",\n    ...props,\n    __css: {\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"]\n    }\n  }\n);\nStackItem.displayName = \"StackItem\";\n\nexport {\n  StackItem\n};\n//# sourceMappingURL=chunk-ZFQCCYWD.mjs.map","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","'use client'\nimport {\n  StackItem\n} from \"./chunk-ZFQCCYWD.mjs\";\nimport {\n  getDividerStyles\n} from \"./chunk-5VJV6UNA.mjs\";\n\n// src/stack/stack.tsx\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: direction,\n      flexWrap: wrap,\n      gap: hasDivider ? void 0 : spacing,\n      className: _className,\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport {\n  Stack\n};\n//# sourceMappingURL=chunk-ZHMYA64R.mjs.map","'use client'\n\n// src/stack/stack.utils.tsx\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nfunction getDividerStyles(options) {\n  const { spacing, direction } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value) => dividerStyles[value]\n    )\n  };\n}\n\nexport {\n  getDividerStyles\n};\n//# sourceMappingURL=chunk-5VJV6UNA.mjs.map","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import * as React from 'react'\nimport { Link as GatsbyLink } from 'gatsby'\nimport { Stack, Link, Text } from '@chakra-ui/react'\n\nexport default function Pagination({ currentPage, numberOfPages }) {\n  const prevPage =\n    currentPage - 1 === 0 || currentPage - 1 === 1\n      ? `/blog`\n      : `/blog/${currentPage - 1}`\n\n  const nextPage =\n    currentPage === numberOfPages ? `/blog` : `/blog/${currentPage + 1}`\n  return (\n    <Stack mb='1.5rem' direction='row' justify='center'>\n      <Stack direction='row'>\n        <Link _hover={{ underline: 'none' }} as={GatsbyLink} to={prevPage}>\n          <Text fontSize='1.125rem'>&#8592; Prev</Text>\n        </Link>\n\n        <Link _hover={{ underline: 'none' }} as={GatsbyLink} to={nextPage}>\n          <Text fontSize='1.125rem'> Next &#8594; </Text>\n        </Link>\n      </Stack>\n    </Stack>\n  )\n}\n","import React from 'react'\nimport Card from './Card'\nimport Pagination from './Pagination'\nimport Category from './Category'\nimport { Box, Flex, Heading } from '@chakra-ui/react'\n\nexport default function CardList({\n  posts,\n  cats,\n  title,\n  currentPage,\n  numberOfPages,\n  isHome,\n}) {\n  return (\n    <Box pt='3rem' px='1rem'>\n      <Heading\n        mb='1rem'\n        fontWeight='400'\n        lineHeight='1.3'\n        as='h2'\n        fontSize='1.875rem'\n      >\n        {title}\n      </Heading>\n      {cats && (\n        <Flex mt='0.5rem' mb='1rem'>\n          {cats.map((cat) => {\n            return <Category key={cat} category={cat} />\n          })}\n        </Flex>\n      )}\n      <Box h='1px' bg='#e6e6e6' mb='3rem' />\n      {posts.map((post) => {\n        return <Card post={post} key={post.frontmatter.slug} />\n      })}\n      {isHome && (\n        <Pagination currentPage={currentPage} numberOfPages={numberOfPages} />\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Link as GatsbyLink } from 'gatsby'\nimport { Text, Link } from '@chakra-ui/react'\n\nexport default function Category({ category }) {\n  return (\n    <Link as={GatsbyLink} to={`/blog/${category}`}>\n      <Text\n        _hover={{ color: '#0074d9' }}\n        mt='0.5rem'\n        mr='0.5rem'\n        mb='1rem'\n        color='#757575'\n        fontSize='0.875rem'\n      >\n        #{category}\n      </Text>\n    </Link>\n  )\n}\n","import { graphql, useStaticQuery } from 'gatsby'\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          icon\n          siteUrl\n          author\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n","import React from 'react'\nimport { useSiteMetadata } from '../../hooks/use-site-metadata'\n\nexport default function Seo({\n  title,\n  description,\n  pathname,\n  children,\n  published,\n}) {\n  const {\n    title: defaultTitle,\n    author,\n    description: defaultDescription,\n    image,\n    icon,\n    siteUrl,\n    twitterUsername,\n  } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    icon: `${siteUrl}${icon}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterUsername,\n    author,\n    published,\n  }\n\n  return (\n    <>\n      <title>{`${seo.title} - ${seo.description}`}</title>\n      <html lang='en' />\n      <meta\n        name='google-site-verification'\n        content='igOICjk9bCW_fL7huhobl9wiAwCzVll7ichYyw41Vs8'\n      />\n      <meta name='description' content={seo.description} />\n      <meta name='image' content={seo.image} />\n      <meta name='author' content={seo.author} />\n      <meta name='twitter:card' content='summary_large_image' />\n      <meta name='twitter:creator' content={seo.twitterUsername} />\n      <meta property='article:published_time' content={seo.published} />\n      {/* <meta name=\"twitter:title\" content={seo.title} /> */}\n      <meta property='og:title' content={seo.title} />\n      {/* <meta name=\"twitter:description\" content={seo.description} /> */}\n      <meta property='og:description' content={seo.description} />\n      {/* <meta name=\"twitter:url\" content={seo.url} /> */}\n      <meta property='og:url' content={seo.url} />\n      {/* <meta name=\"twitter:image\" content={seo.image} /> */}\n      <meta property='og:image' content={seo.image} />\n      <meta property='og:image:alt' content='my social media banner' />\n      <meta property='og:type' content='website' />\n      <link rel='icon' href={seo.icon} />\n      {children}\n    </>\n  )\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Seo from '../components/Layout/Seo'\nimport CardList from '../components/Home/CardList'\n\nexport const CategoryQuery = graphql`\n  query blogCategoryPageQuery($cat: String!) {\n    allMdx(filter: { frontmatter: { category: { eq: $cat } } }) {\n      nodes {\n        frontmatter {\n          author\n          category\n          preview\n          slug\n          date(formatString: \"MMMM Do, YYYY\")\n          title\n          image {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default function BlogCategory({ pageContext, data }) {\n  const { cat } = pageContext\n  const posts = data.allMdx.nodes\n  const title = cat[0].toUpperCase() + cat.slice(1)\n  console.log(cat, posts)\n  return (\n    <>\n      <CardList posts={posts} title={`All ${title} posts`} />\n    </>\n  )\n}\n\nexport const Head = () => <Seo />\n","'use client'\n\n// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n//# sourceMappingURL=chunk-7OLJDQMT.mjs.map"],"names":["Card","_ref","post","date","title","preview","slug","category","frontmatter","React","Box","Text","color","fontSize","Category","Heading","as","fontWeight","lineHeight","my","Link","GatsbyLink","to","textDecoration","_hover","h","bg","StackItem","props","jsx","div","className","__css","display","flex","minWidth","displayName","Object","freeze","Stack","ref","isInline","direction","directionProp","align","justify","spacing","wrap","children","divider","shouldWrapChildren","rest","dividerStyle","useMemo","options","dividerStyles","column","mx","borderLeftWidth","borderBottomWidth","row","prop","mapper","value","Array","isArray","map","item","keys","reduce","result","key","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","Children","toArray","filter","child","isValidElement","getValidChildren","index","isLast","length","_child","clonedDivider","cloneElement","_divider","jsxs","Fragment","_className","cx","alignItems","justifyContent","flexDirection","flexWrap","gap","Pagination","currentPage","numberOfPages","prevPage","nextPage","mb","underline","CardList","posts","cats","isHome","pt","px","Flex","mt","cat","mr","useSiteMetadata","useStaticQuery","site","siteMetadata","Seo","description","pathname","published","defaultTitle","author","defaultDescription","image","icon","siteUrl","twitterUsername","seo","url","lang","name","content","property","rel","href","BlogCategory","pageContext","data","allMdx","nodes","toUpperCase","slice","console","log","Head","styles","h2"],"sourceRoot":""}