{"version":3,"file":"component---src-templates-single-post-jsx-content-file-path-src-posts-1-post-number-one-post-mdx-d21965c5619f16b4198c.js","mappings":"sNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,qBAAsB,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,2TAA4T,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,2TAA4T,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,2TAA4T,KAAMK,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,qBAAsB,KAAMM,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC70CI,UAAW,eACV,+MAAgN,KAAMD,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACxSI,UAAW,gBACV,iYAAkY,KAAMD,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC1dI,UAAW,iBACV,+JAAsK,KAAMD,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC9PI,UAAW,gBACV,oIAAqI,KAAMD,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,qBAAsB,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,2TAC/P,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,2DCDA,SAASc,EAAUC,GAAmB,IAAlB,KAACC,EAAI,SAAEC,GAASF,EAClC,MAAMG,EAAOF,EAAKG,KACZ,OAACC,EAAM,SAAEC,EAAQ,QAAEC,EAAO,KAAEC,EAAI,MAAEC,GAASN,EAAKO,YACtD,OAAOf,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBgB,EAAAA,GAAK,CACxEC,GAAI,OACJC,GAAI,QACHlB,EAAAA,cAAoBmB,EAAAA,EAAS,CAC9BC,SAAU,UACVC,WAAY,MACZC,MAAO,UACPC,WAAY,MACZC,GAAI,MACHV,GAAQd,EAAAA,cAAoByB,EAAAA,EAAM,CACnCL,SAAU,SACVG,WAAY,UACZD,MAAO,WACNT,EAAM,MAAOH,GAASV,EAAAA,cAAoByB,EAAAA,EAAM,CACjDL,SAAU,WACVG,WAAY,UACZD,MAAO,UACPI,UAAW,OACXF,GAAI,KACHZ,GAAUZ,EAAAA,cAAoB2B,EAAAA,GAAa,CAC5C5B,WAAYA,EAAAA,GACXQ,GAAWP,EAAAA,cAAoB4B,EAAAA,EAAU,CAC1CjB,SAAUA,KAEd,CACe,SAASkB,EAAiBvC,GACvC,OAAOU,EAAAA,cAAoBI,EAAYd,EAAOU,EAAAA,cAAoB8B,EAAqBxC,GACzF,CACO,MAAMyC,EAAOC,IAAY,IAAX,KAAC1B,GAAK0B,EACzB,MAAMC,EAAS3B,EAAKG,IACpB,OAAOT,EAAAA,cAAoBkC,EAAAA,EAAK,CAC9BC,SAAUF,EAAOlB,YAAYqB,KAC7BC,YAAaJ,EAAOlB,YAAYH,QAChCE,MAAOmB,EAAOlB,YAAYD,MAC1BwB,UAAWL,EAAOlB,YAAYF,MAC9B,C","sources":["webpack://gatsbydecapblog/./src/posts/1-post-number-one/post.mdx","webpack://gatsbydecapblog/./src/templates/SinglePost.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Heading Level One\"), \"\\n\", React.createElement(_components.p, null, \"Gatsby is able to automatically infer a GraphQL Schema from your data, and in many cases, this is really all you need. There are however situations when you either want to explicitly define the data shape, or add custom functionality to the query layer - this is what Gatsby’s Schema Customization API provides.\"), \"\\n\", React.createElement(_components.p, null, \"Gatsby is able to automatically infer a GraphQL Schema from your data, and in many cases, this is really all you need. There are however situations when you either want to explicitly define the data shape, or add custom functionality to the query layer - this is what Gatsby’s Schema Customization API provides.\"), \"\\n\", React.createElement(_components.p, null, \"Gatsby is able to automatically infer a GraphQL Schema from your data, and in many cases, this is really all you need. There are however situations when you either want to explicitly define the data shape, or add custom functionality to the query layer - this is what Gatsby’s Schema Customization API provides.\"), \"\\n\", React.createElement(_components.h2, null, \"Heading Level Two\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// comments\\nconst name = 'john'\\nconst channel = 'coding addict'\\n\\nfunction featuredProducts(data) {\\n  return data.filter((item) => {\\n    return item.featured === true\\n  })\\n}\\nfeaturedProducts()\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"import React from 'react'\\n\\nconst Counter = () => {\\n  const [count, setCount] = React.useState(0)\\n  return (\\n    <section className='counter'>\\n      <h4>show some love to MDX</h4>\\n      <h4>likes {count}</h4>\\n      <button className='btn btn-danger' onClick={() => setCount(count + 1)}>\\n        i like mdx\\n      </button>\\n    </section>\\n  )\\n}\\nexport default Counter\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"<h1>hello world</h1>\\n<p class=\\\"random\\\">random text</p>\\n<section class=\\\"contact\\\">\\n  <div class=\\\"title\\\">\\n    <h1>contact us</h1>\\n  </div>\\n</section>\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-css\"\n  }, \"max-width: 500px;\\nborder-radius: var(--radius);\\npadding: 1rem 1.5rem;\\nbackground: var(--clr-grey-10);\\ntext-align: center;\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Heading Level One\"), \"\\n\", React.createElement(_components.p, null, \"Gatsby is able to automatically infer a GraphQL Schema from your data, and in many cases, this is really all you need. There are however situations when you either want to explicitly define the data shape, or add custom functionality to the query layer - this is what Gatsby’s Schema Customization API provides.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/mr2k1/gatsbyDecapBlog/src/posts/1-post-number-one/post.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from '@mdx-js/react';\nimport {Box, Heading, Text} from '@chakra-ui/react';\nimport {components} from '../components/SinglePost/shortcodes';\nimport Category from '../components/Home/Category';\nimport Seo from '../components/Layout/Seo';\nexport const SinglePostQuery = graphql`\n  query singlePostQueryQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        author\n        category\n        date(formatString: \"MMMM Do, YYYY\")\n        title\n        slug\n        preview\n      }\n    }\n  }\n`;\nfunction SinglePost({data, children}) {\n  const post = data.mdx;\n  const {author, category, preview, date, title} = post.frontmatter;\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    px: \"1rem\",\n    pt: \"3rem\"\n  }, React.createElement(Heading, {\n    fontSize: \"2.25rem\",\n    fontWeight: \"400\",\n    color: \"#292929\",\n    lineHeight: \"1.3\",\n    as: \"h1\"\n  }, title), React.createElement(Text, {\n    fontSize: \"0.9rem\",\n    lineHeight: \"1.54rem\",\n    color: \"#757575\"\n  }, date, \" | \", author), React.createElement(Text, {\n    fontSize: \"1.125rem\",\n    lineHeight: \"1.54rem\",\n    color: \"#292929\",\n    marginTop: \"3rem\",\n    as: \"p\"\n  }, preview), React.createElement(MDXProvider, {\n    components: components\n  }, children), React.createElement(Category, {\n    category: category\n  })));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(SinglePost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({data}) => {\n  const seotag = data.mdx;\n  return React.createElement(Seo, {\n    pathname: seotag.frontmatter.slug,\n    description: seotag.frontmatter.preview,\n    title: seotag.frontmatter.title,\n    published: seotag.frontmatter.date\n  });\n};\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","SinglePost","_ref","data","children","post","mdx","author","category","preview","date","title","frontmatter","Box","px","pt","Heading","fontSize","fontWeight","color","lineHeight","as","Text","marginTop","MDXProvider","Category","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","seotag","Seo","pathname","slug","description","published"],"sourceRoot":""}